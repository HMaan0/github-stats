name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            BACKEND_URL=${{secrets.BACKEND_URL}}
            NEXTAUTH_URL=${{secrets.NEXTAUTH_URL}}
            NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}}
            JWT_SECRET=${{secrets.JWT_SECRET}}
            CALLBACK_URL=${{secrets.CALLBACK_URL}}
            ID_GITHUB=${{secrets.ID_GITHUB}}
            SECRET_GITHUB=${{secrets.SECRET_GITHUB}}
            DATABASE_URL=${{secrets.DATABASE_URL}}
            ADMIN_USERNAME=${{secrets.ADMIN_USERNAME}}
            REDIS_HOST=${{secrets.REDIS_HOST}}
            REDIS_PORT=${{secrets.REDIS_PORT}}
          context: .
          file: ./dockerfile
          push: true
          tags: harsh0maan/github_stats:latest
        env:
          BACKEND_URL: ${{secrets.BACKEND_URL}}
          NEXTAUTH_URL: ${{secrets.NEXTAUTH_URL}}
          NEXTAUTH_SECRET: ${{secrets.NEXTAUTH_SECRET}}
          JWT_SECRET: ${{secrets.JWT_SECRET}}
          CALLBACK_URL: ${{secrets.CALLBACK_URL}}
          ID_GITHUB: ${{secrets.ID_GITHUB}}
          SECRET_GITHUB: ${{secrets.SECRET_GITHUB}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          ADMIN_USERNAME: ${{secrets.ADMIN_USERNAME}}
          REDIS_HOST: ${{secrets.REDIS_HOST}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}

      - name: Verify Pushed Image
        run: docker pull harsh0maan/github_stats:latest

      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Stopping existing container..."
            sudo docker stop github_stats || true

            echo "Removing existing container..."
            sudo docker rm github_stats || true

            echo "Removing existing network"
            sudo docker network rm my_network || true

            echo "Creating new network"
            sudo docker network create my_network

            echo "Starting Redis expects: REDIS IMAGE & VOLUME"
            sudo docker kill redis_container || true
            sudo docker run -d --name redis_container -v redis_volume:/data --network my_network -p 6379:6379 redis redis-server --appendonly yes

            echo "Pulling the latest Docker image..."
            sudo docker pull harsh0maan/github_stats:latest

            echo "Starting new container..."
            sudo docker run -d --name github_stats -p 3000:3000 --network my_network harsh0maan/github_stats:latest
